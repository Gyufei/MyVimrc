snippet #! "" m
#!/usr/bin/env python
# -*- coding: utf-8 -*-
endsnippet

snippet imp
import ${0:module}
endsnippet
snippet from
from ${1:package} import ${0:module}
endsnippet

# Module Docstring
snippet docs
"""
File: ${1:`vim_snippets#Filename('$1.py', 'foo.py')`}
Author: `g:snips_author`
Email: `g:snips_email`
Github: `g:snips_github`
Description: ${0}
"""
endsnippet

snippet wh
while ${1:condition}:
	${0:${VISUAL}}
endsnippet
# dowh - does the same as do...while in other languages
snippet dowh
while True:
	${1}
	if ${0:condition}:
		break
endsnippet
snippet with
with ${1:expr} as ${2:var}:
	${0:${VISUAL}}
endsnippet

# New Class
snippet cl
class ${1:ClassName}(${2:object}):
	"""${3:docstring for $1}"""
	def __init__(self, ${4:arg}):
		${5:super($1, self).__init__()}
		self.$4 = $4
		${0}
endsnippet

# New Function
snippet def
def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):
	"""${3:docstring for $1}"""
	${0}
endsnippet
# New Method
snippet defi
def __init__(self, ${1:args}):
	${0}
endsnippet
snippet defm
def ${1:mname}(self, ${2:arg}):
	${0}
endsnippet

# Ifs
snippet if
if ${1:condition}:
	${0:${VISUAL}}
endsnippet
snippet el
else:
	${0:${VISUAL}}
endsnippet
snippet ei
elif ${1:condition}:
	${0:${VISUAL}}
endsnippet

# For
snippet for
for ${1:item} in ${2:items}:
	${0}
endsnippet

# Encodes
snippet cutf8
# -*- coding: utf-8 -*-
endsnippet

# Lambda
snippet ld
${1:var} = lambda ${2:vars} : ${0:action}
endsnippet
snippet ret
return ${0}
endsnippet

# Error
snippet try "Try/Except"
try:
	${1:${VISUAL}}
except ${2:Exception} as ${3:e}:
	${0:raise $3}
endsnippet

snippet trye "Try/Except/Else"
try:
	${1:${VISUAL}}
except ${2:Exception} as ${3:e}:
	${4:raise $3}
else:
	${0}
endsnippet

snippet tryf "Try/Except/Finally"
try:
	${1:${VISUAL}}
except ${2:Exception} as ${3:e}:
	${4:raise $3}
finally:
	${0}
endsnippet
snippet tryef "Try/Except/Else/Finally"
try:
	${1:${VISUAL}}
except ${2:Exception} as ${3:e}:
	${4:raise $3}
else:
	${5}
finally:
	${0}
endsnippet

# if __name__ == '__main__':
snippet ifmain
if __name__ == '__main__':
	${0:main()}
endsnippet

snippet "
"""${0:doc}
"""
endsnippet

